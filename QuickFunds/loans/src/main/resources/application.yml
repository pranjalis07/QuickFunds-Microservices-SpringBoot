server:
  port: 8090
spring:
  application:
    name: "loans"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  config:
    import: "optional:configserver:http://localhost:8071/"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "loans"
    description: "Bank Loans Application"
    version: "1.0.0"

logging:
  level:
    com:
      micro:
        loans: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
    
# commands for docker images

# open cmd inside loans service path, 
# mvn compile jib:dockerBuild - log out from docker desktop

# push img, no need to open cmd through folder
# docker push docker.io/ksrushti/loans:Kafka - log in to docker desktop 


# docker-compose up -d  
# docker-compose down
# docker-compose stop    